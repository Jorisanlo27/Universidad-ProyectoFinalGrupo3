@model Universidad.Models.Estudiante
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Edit";
}

@if(User.IsInRole("Admin")) {
    <h1>Edit</h1>

    <h4>Estudiante</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="IdEstudiantes" />
                <div class="form-group">
                    <label asp-for="IdPersona" class="control-label"></label>
                    <select asp-for="IdPersona" class="form-control" asp-items="ViewBag.IdPersona"></select>
                    <span asp-validation-for="IdPersona" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IdCarrera" class="control-label"></label>
                    <select asp-for="IdCarrera" class="form-control" asp-items="ViewBag.IdCarrera"></select>
                    <span asp-validation-for="IdCarrera" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
    @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
} else {
    <h1 class="text-danger">Access Denied</h1>
}